{"version":3,"sources":["js/KartPlayer.js","js/index.js"],"names":["HTMLElement","KartPlayer","name","config","y","x","img","attachShadow","mode","render","road","appendChild","setSpeed","style","setProperty","Math","random","classList","add","remove","shadowRoot","innerHTML","styles","customElements","define","botonStart","document","querySelector","botonRestart","karts","timer","Object","entries","players","image","length","kart","addToRoad","push","startRace","setInterval","startIteration","disabled","endRace","clearInterval","forEach","isWinner","win","lose","restartRace","restart","inc","some","onclick"],"mappings":"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","file":"js.46923200.js","sourceRoot":"../src","sourcesContent":["export class KartPlayer extends HTMLElement {\n    constructor(name, config) {\n        super();\n\n        this.name = name;\n        this.y = config[\"y\"];\n        this.x = 0;\n        this.img = config[\"image\"];\n\n        this.attachShadow({ mode: 'open' });\n        this.render();\n    }\n\n    addToRoad(road) {\n        road.appendChild(this);\n    }\n\n\n    inc() {\n        this.x = this.x + this.setSpeed()\n        this.style.setProperty(\"--x\", `${this.x}px`);\n    }\n\n    //La velocidad se pondrá a un número entre 5 y 50\n    setSpeed() {\n        return Math.random() * (50 - 5) + 5;\n    }\n\n    isWinner() {\n        return this.x >= 950 ? true : false;\n    }\n\n    win() {\n        this.classList.add(\"win\");\n    }\n    lose() {\n        this.classList.add(\"lose\");\n    }\n    restart() {\n        this.x = 0;\n\n        this.classList.remove(\"win\")\n        this.classList.remove(\"lose\")\n\n        this.style.setProperty(\"--x\", `${this.x}px`);\n\n\n    }\n\n\n    get styles() {\n        return `\n           :host {\n             position: absolute;\n             display: inline-block;\n             left: 0;\n             top: ${this.y}px;\n             transform: translateX(var(--x));\n             transition: transform 60/1000s;\n             will-change: transform;\n           }\n           :host(.win) {\n                filter:drop-shadow(0 0 6px yellow);\n                z-index:5;\n            }\n           :host(.lose) {\n                opacity:0.25;\n            }\n         `;\n    }\n\n    render() {\n        this.shadowRoot.innerHTML = `\n              <style>${this.styles}</style>\n              <img src=\"${this.img}\" alt=\"${this.name}\">\n            `;\n    }\n\n}","import players from \"../assets/kart_*.png\";\nimport { KartPlayer } from \"./KartPlayer.js\";\ncustomElements.define('kart-player', KartPlayer);\n\nconst botonStart = document.querySelector(\".start\");\nconst botonRestart = document.querySelector(\".restart\");\nconst road = document.querySelector(\".road\");\nconst karts = [];\nlet timer = null;\n\nfor (const [name, image] of Object.entries(players)) {\n    const config = {\n        image,\n        y: karts.length * 64\n    };\n    const kart = new KartPlayer(name, config);\n    kart.addToRoad(road);\n    karts.push(kart);\n};\n\nconst startRace = () => {\n    timer = setInterval(() => startIteration(), (1000 / 60));\n    botonStart.disabled = true;\n    botonRestart.disabled = true;\n};\n\nconst endRace = () => {\n    clearInterval(timer);\n    karts.forEach(kart => (kart.isWinner() ? kart.win() : kart.lose()));\n    botonRestart.disabled = false;\n};\n\nconst restartRace = () => {\n    karts.forEach(kart => kart.restart());\n    botonStart.disabled = false;\n};\n\nconst startIteration = () => {\n    karts.forEach(kart => kart.inc());\n    if (karts.some(kart => kart.isWinner())) endRace();\n};\n\nbotonStart.onclick = () => startRace();\nbotonRestart.onclick = () => restartRace();"]}